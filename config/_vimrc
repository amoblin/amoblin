"命令集
"设置自动折行 set wrap/set wrap!
set wrap
""不要闪烁，不要蜂鸣 no visual bell, and no beep. oh,yeah!
set novisualbell
"set noerrorbells
set vb t_vb="."
"状态行显示的内容（包括文件类型和解码）
"set statusline=%F%m%r%h%w\ FORMAT=%{&ff}\ TYPE=%Y\ POS=%l,%v\ %p%%\ %{strftime(\"%y-%m-%d\ -\ %H:%M\")}
set statusline=%<%f\ %h%m%r%=%k%{&ff}\ [%{(&fenc==\"\")?&enc:&fenc}%{(&bomb?\",BOM\":\"\")}]\ %-14.(%l,%c%V%)\ %P
set laststatus=2
" 状态行颜色
highlight StatusLine guifg=SlateBlue guibg=Yellow
highlight StatusLineNC guifg=Gray guibg=White

set mouse=a
set selection=exclusive
set selectmode=mouse,key

"设置make来更新conky设置
au BufNewFile,BufRead *conkyrc* set makeprg=pkill\ conky&conky\ -c\ %\ 2>~/.conky/%.log&
au BufNewFile,BufRead *conkyrc* set filetype=conkyrc
au BufNewFile,BufRead *tint2rc* set makeprg=pkill\ tint2&tint2\ -c\ %&
au BufNewFile,BufRead .trayrc set makeprg=pkill\ trayer&trayer\ `cat\ .trayrc`&
au BufNewFile,BufRead lrcdis set makeprg=pkill\ lrcdis&lrcdis\ -m\ fifo
"设置make来更新openbox配置
au BufNewFile,BufRead rc.xml set makeprg=openbox\ --reconfigure&

au BufNewFile,BufRead *.cc set makeprg=g++\ %\ -o\ %.out&

"autocmd
"autocmd FileType java source ~/.vim/myplugin/java.vim
"autocmd FileType tex source ~/.vim/ftplugin/tex_.vim
autocmd FileType cc source ~/.vim/myplugin/cpp.vim

"Pascal风格源程序的大括号折叠,若C风格的则去掉"+1"即可
"function MyFoldfun(lineNum)
"	if getline(a:lineNum+1)=~'^{'
"		return 'a1'
"	elseif getline(a:lineNum)=~'^}'
"		return 's1'
"	elseif getline(a:lineNum)=~'.\+{'
"		return 'a1'
"	elseif getline(a:lineNum)=~'.\+}'
"		return 's1'
"	else
"		return '='
"	endif
"endfunction


function MyFoldfun(lineNum)
	if getline(a:lineNum+1)=~'^{'
		return 'a1'
	elseif getline(a:lineNum)=~'^}'
		return 's1'
	"elseif getline(a:lineNum+1)=~'.\+{.\+}.\+'
	"	return '='
    "elseif getline(a:lineNum)=~'.\+}.\+{.\+'
	"	return 's2'
    "elseif getline(a:lineNum-1)=~'.\+}.\+{.\+'
	"	return 'a1'
	elseif getline(a:lineNum+1)=~'.\+}'
		return 's1'
	elseif getline(a:lineNum)=~'.\+{'
		return 'a1'
	else
		return '='
	endif
endfunction
" Folding setting comes here
if has("autocmd")
	augroup cprog
		autocmd FileType java,c,cpp,cc,javascript,css,php,pl,sed,awk,sh set formatoptions=croql cindent comments=sr:/*,mb:*,el:*/,:// expandtab foldcolumn=4 foldmethod=expr foldexpr=MyFoldfun(v:lnum)
	augroup END
else
	set foldcolumn=4
	set foldmethod=expr
	set foldexpr=MyFoldfun(v:lnum)
endif



"设置xml文档依缩进折叠
autocmd FileType xml,html,xsl,xhtml,htm,xhtm,svg,xsd,php,vimrc,python set foldmethod=indent
"python设置
autocmd FileType python setlocal makeprg=xterm\ -e\ ./%
autocmd FileType sh setlocal makeprg=xterm\ -e\ ./%
autocmd FileType python compiler pyunit

"光标行折行总是打开的
"set foldopen=all
"光标离开时折行自动关闭
"set foldclose=all

"编译
nmap <F7> :make<cr>
"运行
nmap <F8> :make run<cr>

"添加时间戳
map <F5> O<C-R>=strftime("%c")<CR><Esc>o
"nmap <F7> :!sdcv -n <C-R>=expand("<cword>")<CR><CR>
"nmap <C-[> :!sdcv "<cword>" <C-R>=expand("<cword>")<CR><CR>
"nmap <C-B> :!"<cword>"<CR>

"括号自动补全
:inoremap ( ()<ESC>i
"":inoremap ) <c-r>=ClosePair(’)')<CR>
:inoremap { {}<ESC>i
:inoremap } <c-r>=ClosePair(’}')<CR>
:inoremap " ""<ESC>i
":inoremap " <c-r>=ClosePair(’"’)<CR>
:inoremap ' ''<ESC>i
":inoremap ' <c-r>=ClosePair(’\'’)<CR>
:inoremap [ []<ESC>i
"":inoremap ] <c-r>=ClosePair(’]')<CR>
":inoremap < <><ESC>i
":inoremap > <c-r>=ClosePair(’>’)<CR>

function ClosePair(char)
	if getline(’.')[col(’.') - 1] == a:char
		return “\<Right>”
	else
		return a:char
	endif
endf

"WMToggle

"不备份文件
set backup 

" 使用 murphy 调色板
" 按照时间改变调色板
colorscheme peachpuff
"colorscheme default
" 设定文件浏览器目录为当前目录
set bsdir=buffer

"	auto change dir
"set autochdir

set showmatch


" 设置编码
set enc=utf-8
" 设置文件编码
set fenc=utf-8
" 设置文件编码检测类型及支持格式
set fencs=utf-8,gbk,ucs-bom,gb18030,cp936,enu-cs

" 指定菜单语言
set langmenu=zh_CN.UTF-8
source $VIMRUNTIME/delmenu.vim
source $VIMRUNTIME/menu.vim

" 设置语法高亮度 sy on/sy off
syntax on "sy on

"显示行号 set nu/set nonu
set number
set ruler

"不循环搜索 no wrap scan
""set nowrapscan

"自动缩进 
"依文件类型自动缩进 
filetype plugin indent on
"自动补全
set completeopt=longest,menu
"继承前一行缩进方式
set autoindent "set ai for short

"查找时大小写敏感
"set igsearch
"查找时若有大写则敏感
set ignorecase smartcase
" 查找结果高亮度显示
set hlsearch
"动态查找
set incsearch "set ic for short

"自动换行
"set lbr

" tab宽度
set expandtab
set tabstop=4
set shiftwidth=4
set cindent shiftwidth=4
set autoindent shiftwidth=4
" 增强检索功能
set tags=./tags,./../tags,./**/tags

" 保存文件格式
set fileformats=unix,dos

" 键盘操作
map <Up> gk
map <Down> gj
map <c-p> :bp<CR>
map <c-n> :bn<CR>

"使用docbook格式
"map! ,e <emphasis>
"map! ,p <para>
"map <F3> v/>^Mx

"命令行高度
set cmdheight=1

" 中文帮助
set helplang=zh
"不使用vi键盘模式，而是使用vim键盘模式
set nocompatible

"sh脚本自动注释
let g:BASH_AuthorName='csip'
let g:BASH_Email='amoblin@gmail.com'
let g:BASH_Company='bistu'

"augroup math
"	au!
"	au BufEnter *.m set makeprg=octave\ --persist\ %
"augroup END

augroup tex
	au!
	au BufEnter *.tex set makeprg=pdflatex\ %
augroup END
let g:Tex_CompileRule_dvi="latex -src-specials -interaction=nonstopmode $*"
