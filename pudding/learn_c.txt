warning: incompatible implicit declaration of built-in function
这个警告是没有include对应函数的库文件造成的。

wchar_t 宽字符，在stddef.h中定义

printf("%d%d%d",i,++i,++i)将显示一样的数字，不会是递增的数。

UTF-8
随着互联网兴起，如何在网络上传输字符UNICODE也是一个问题．于是面向传输的众多 UTF（UCS Transfer Format）标准出现了，顾名思义，UTF8就是每次8个位传输数据，而 UTF16就是每次16个位，
 
UTF-8最大的一个特点，就是它是一种变长的编码方式。它可以使用1~4个字节表示一个符号，根据不同的符号而变化字节长度。

UTF-8的编码规则很简单，只有二条：

1）对于单字节的符号，字节的第一位设为0，后面7位为这个符号的unicode码。因此对于英语字母，UTF-8编码和ASCII码是相同的。

2）对于n字节的符号（n>1），第一个字节的前n位都设为1，第n+1位设为0，后面字节的前两位一律设为10。剩下的没有提及的二进制位，全部为这个符号的unicode码。

下表总结了编码规则，字母x表示可用编码的位。

Unicode符号范围 | UTF-8编码方式
(十六进制) | （二进制）
-----------------------+--------------------------------------------------------
|0000 0000 - 0000 007F | 0xxxxxxx                                              |
|0000 0080 - 0000 07FF | 110xxxxx 10xxxxxx                                     |
|0000 0800 - 0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx                            |
|0001 0000 - 001F FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx                   |
|0020 0000 - 03FF FFFF | 111110xx 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx          |
|0400 0000 - 7FFF FFFF | 1111110x 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx 10xxxxxx |
--------------------------------------------------------------------------------

ASCII字母继续使用1字节存储，重音文字、希腊字母或西里尔字母等(比如å)使用2字节来存储，而常用的汉字就要使用3字节。辅助平面字符则使用4字节。

下面，还是以汉字“严”为例，演示如何实现UTF-8编码。

已知“严”的unicode是4E25（0100 1110 0010 0101），根据上表，可以发现4E25处在第三行的范围内（0000 0800-0000 FFFF），因此“严”的UTF-8编码需要三个字节，即格式是“1110xxxx 10xxxxxx 10xxxxxx”。然后，从“严”的最后一个二进制位开始，依次从后向前填入格式中的x，多出的位补0。这样就得到了，“严”的UTF-8编码是“1110 0100 10 111000 10 100101”，转换成十六进制就是E4B8A5。


中  e4 b8 ad
1110 0100 1011 1000 1010 1101

0100 0000 0000 0000         4000

0000 1110 0000 0000         0e00    4e00

0000 0000 0010 1101         002d    4e2d

国 e5 9b bd

1110 0101 1001 1011 1011 1101

0101 0000 0000 0000      5000

0000 0110 1100 0000      06c0       56c0

0000 0000 0011 1101      003d       56fd





xxd用来查看文件编码

od也不错，很好用

hexdump查看文件的16进制显示，通过它可以看出文本编码

http://zh.wikipedia.org/wiki/UTF-8
http://zh.wikipedia.org/wiki/Unicode
http://zh.wikipedia.org/wiki/%E9%80%9A%E7%94%A8%E5%AD%97%E7%AC%A6%E9%9B%86

编码的理解
http://blog.donews.com/holen/archive/2004/11/30/188182.aspx

汉字编码及LINUX中文处理
http://blogold.chinaunix.net/u3/105675/showart_2121442.html

在Linux C编程中使用Unicode和UTF-8
http://learn.akae.cn/media/apas03.html

通过正负判断字节数，比较初级
http://zhidao.baidu.com/question/31400738

通过utf8编码规则判断字节数
http://wenwen.soso.com/z/q242901768.htm

utf8转unicode
http://zhidao.baidu.com/question/209280054.html?fr=qrl&cid=866&index=1

文本文件和二进制文件
http://www.cnblogs.com/mjgforever/archive/2008/02/27/1083584.html

fprintf和fwrite区别
http://topic.csdn.net/u/20100426/01/61fc9faf-69e7-44a6-a353-b2a871e40357.html
